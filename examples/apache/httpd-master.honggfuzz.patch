diff --git a/compile.sh b/compile.sh
new file mode 100755
index 000000000..edf157719
--- /dev/null
+++ b/compile.sh
@@ -0,0 +1,4 @@
+#!/bin/sh
+
+CC=/usr/local/google/home/swiecki/src/honggfuzz/hfuzz_cc/hfuzz-clang CXX=$CC CPP=cpp LIBS="-L/home/swiecki/fuzz/apache/nghttp2-1.23.1/lib/ -fsanitize=address" CFLAGS="-fsanitize=address -I/home/swiecki/fuzz/apache/nghttp2-1.23.1/lib/includes -march=skylake -g -ggdb" LDFLAGS="$CFLAGS -ldl" ./configure --enable-unixd --disable-pie --enable-mods-static=few --prefix=/home/swiecki/fuzz/apache/apache2/ --with-mpm=event --enable-http2 --with-apr=/home/swiecki/fuzz/apache/apr-1.5.2/ --with-apr-util=/home/swiecki/fuzz/apache/apr-util-1.5.4/ --with-nghttp2=/home/swiecki/fuzz/apache/nghttp2-1.23.1 --enable-nghttp2-staticlib-deps
+
diff --git a/server/main.c b/server/main.c
index bda60827c..a62df4cbf 100644
--- a/server/main.c
+++ b/server/main.c
@@ -459,8 +459,83 @@ static void usage(process_rec *process)
     destroy_and_exit_process(process, 1);
 }
 
-int main(int argc, const char * const argv[])
-{
+#include <libhfuzz.h>
+
+static void GETDATA(void *unused) {
+  usleep(100000);
+
+  for (;;) {
+    size_t len;
+    const uint8_t *buf;
+
+    HF_ITER(&buf, &len);
+
+    int myfd = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);
+    if (myfd == -1) {
+      perror("socket");
+      _exit(1);
+    }
+
+    int sz = (1024 * 1024);
+    if (setsockopt(myfd, SOL_SOCKET, SO_SNDBUF, &sz, sizeof(sz)) == -1) {
+      perror("setsockopt");
+      exit(1);
+    }
+
+    struct sockaddr_in saddr;
+    saddr.sin_family = AF_INET;
+    saddr.sin_port = htons(8080);
+    saddr.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
+    if (connect(myfd, &saddr, sizeof(saddr)) == -1) {
+      perror("connect");
+      continue;
+    }
+
+    if (send(myfd, buf, len, MSG_NOSIGNAL) != len) {
+      perror("send() failed 1");
+      exit(1);
+    }
+
+    if (shutdown(myfd, SHUT_WR) == -1) {
+      perror("shutdown");
+      exit(1);
+    }
+
+    char b[1024 * 1024];
+    while (recv(myfd, b, sizeof(b), MSG_WAITALL) > 0) {} ;
+
+    close(myfd);
+  }
+}
+
+static void LAUNCHTHR() {
+  if (linuxEnterNs(CLONE_NEWUSER|CLONE_NEWNET|CLONE_NEWNS) == false) {
+    exit(1);
+  }
+  if (linuxIfaceUp("lo") == false) {
+    exit(1);
+  }
+  if (linuxMountTmpfs("/tmp") == false) {
+    exit(1);
+  }
+
+  pthread_t t;
+  pthread_attr_t attr;
+
+  pthread_attr_init(&attr);
+  pthread_attr_setstacksize(&attr, 1024 * 1024 * 8);
+  pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
+
+  pthread_create(&t, &attr, GETDATA,  NULL);
+}
+
+ int main(int argc, const char * const argv[])
+ {
+
+  if (getenv("NO_FUZZ") == NULL) {
+        LAUNCHTHR();
+  }
+
     char c;
     int showcompile = 0, showdirectives = 0;
     const char *confname = SERVER_CONFIG_FILE;
diff --git a/support/ab.c b/support/ab.c
index 58769a9c8..ddf141bcc 100644
--- a/support/ab.c
+++ b/support/ab.c
@@ -727,7 +727,7 @@ static void ssl_proceed_handshake(struct connection *c)
             }
             if (ssl_tmp_key == NULL) {
                 EVP_PKEY *key;
-                if (SSL_get_server_tmp_key(c->ssl, &key)) {
+                if (0) {
                     ssl_tmp_key = xmalloc(128);
                     switch (EVP_PKEY_id(key)) {
                     case EVP_PKEY_RSA:
